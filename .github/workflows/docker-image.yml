name: Docker Image CI

on:
  label:
    types:
      - created
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=schedule
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha
      - name: Build and push Docker images
        # You may pin to the exact commit or the version.
        # uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        uses: docker/build-push-action@v4.0.0
        with:
          # List of external cache sources for buildx (e.g., user/app:cache, type=local,src=path/to/dir)
          cache-from: pydata-bcn-dbt-fal:latest
          # List of cache export destinations for buildx (e.g., user/app:cache, type=local,dest=path/to/dir)
          context: .
          # Path to the Dockerfile
          file: Dockerfile
          # Push is a shorthand for --output=type=registry
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          # Sets the target stage to build
          target: dev_env
